# Production Dockerfile for Render deployment
FROM golang:1.24-alpine AS builder

# Set working directory
WORKDIR /app

# Install git for go modules
RUN apk add --no-cache git

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o stock-market-websocket ./cmd

# Production stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN addgroup -g 1000 appuser && adduser -D -u 1000 -G appuser appuser

# Set working directory
WORKDIR /root/

# Copy binary from builder
COPY --from=builder /app/stock-market-websocket .

# Change ownership to non-root user
RUN chown appuser:appuser stock-market-websocket

# Switch to non-root user
USER appuser

# Expose port (Render will set the PORT environment variable)
EXPOSE 8080

# Run the application
CMD ["./stock-market-websocket"] 